// can be rendered here https://dreampuf.github.io/GraphvizOnline

digraph G {
  // General graph settings
  graph [layout=dot]
  node [shape=ellipse, style=filled, fillcolor=lightblue]

  // Nodes
  Code [label="Code\n(Series of statements and expressions)"]
  Statement [label="Statement\n(An instruction written in R code)"]
  Expression [label="Expression\n(A combination of variables, operations, and values that can be evaluated)"]
  Comment [label="Comment\n(Text for explanation, not executed)"]
  Data [label="Data\n(Raw information processed by code)"]
  Variable [label="Variable\n(A name assigned to data)"]
  DataStructure [label="Data Structure\n(How data is stored)"]
  DataType [label="Data Type\n(The kind of data that can be stored)"]
  Type [label="Type\n(Broader category that includes Data Type and Data Structure)"]
  Function [label="Function\n(Code designed for a specific task)"]
  CallInvoke [label="Call/Invoke\n(Running a function)"]
  Arguments [label="Arguments/Parameters\n(Values supplied to function)"]
  DefaultValues [label="Default Values\n(Pre-set values for function parameters)"]
  ReturnValue [label="Return Value\n(What function gives back)"]
  Vector [label="Vector\n(1D data structure with same data type)"]
  Character [label="Character"]
  Numeric [label="Numeric"]
  Integer [label="Integer"]
  Logical [label="Logical"]

  // Edges with labels
  Code -> Statement [label=" includes"]
  Code -> Expression [label=" includes"]
  Code -> Comment [label=" can contain"]
  Statement -> Function [label=" can be"]
  Statement -> Assign [label=" can be"]
  Statement -> CallInvoke [label=" can be"]
  Expression -> Function [label=" can include"]
  Expression -> Assign [label=" can include"]
  Expression -> CallInvoke [label=" can include"]
  Expression -> Type [label=" has"]
  Expression -> Variable [label=" uses"]
  Comment -> Code [label=" part of"]
  Data -> Variable [label=" used by"]
  Data -> DataType [label=" has"]
  Data -> DataStructure [label=" in"]
  Variable -> Assign [label=" affected by"]
  Variable -> Type [label=" has"]
  Variable -> DataStructure [label=" in"]
  DataStructure -> Vector [label=" e.g."]
  DataStructure -> Type [label=" has"]
  DataType -> Variable [label=" defines"]
  DataType -> Type [label=" is a"]
  DataType -> Character [label=" e.g."]
  DataType -> Numeric [label=" e.g."]
  DataType -> Integer [label=" e.g."]
  DataType -> Logical [label=" e.g."]
  Type -> Variable [label=" affects"]
  Type -> DataType [label=" includes"]
  Type -> DataStructure [label=" includes"]
  Function -> CallInvoke [label=" used by"]
  Function -> Arguments [label=" takes"]
  Function -> ReturnValue [label=" has"]
  CallInvoke -> Function [label=" uses"]
  CallInvoke -> Arguments [label=" supplies"]
  Arguments -> DefaultValues [label=" may have"]
  Arguments -> Function [label=" used by"]
  DefaultValues -> Arguments [label=" for"]
  DefaultValues -> Function [label=" in"]
  ReturnValue -> Function [label=" from"]
  Vector -> DataStructure [label=" is a"]
  Vector -> DataType [label=" has"]
  Character -> DataType [label=" is a"]
  Numeric -> DataType [label=" is a"]
  Integer -> DataType [label=" is a"]
  Logical -> DataType [label=" is a"]
}